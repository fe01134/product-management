{"version":3,"sources":["components/TutorialHeader/index.js","components/TutorialHeader/TutorialHeader.js","content/LandingPage/LandingPage.js","content/LandingPage/index.js","content/RepoPage/RepoTable.js","content/RepoPage/RepoPage.js","content/RepoPage/index.js","App.js","serviceWorker.js","index.js"],"names":["TutorialHeader","HeaderContainer","render","isSideNavExpanded","onClickSideNavExpand","Header","aria-label","SkipToContent","HeaderMenuButton","onClick","isActive","HeaderName","element","Link","to","prefix","HeaderNavigation","HeaderMenuItem","SideNav","expanded","isPersistent","SideNavItems","HeaderSideNavItems","HeaderGlobalBar","HeaderGlobalAction","props","selected","triggerHref","role","href","tabIndex","LandingPage","className","Breadcrumb","noTrailingSlash","BreadcrumbItem","Tabs","Tab","label","Button","src","process","alt","RepoTable","rows","headers","DataTable","getHeaderProps","getRowProps","getTableProps","TableContainer","title","description","Table","TableHead","TableRow","TableExpandHeader","map","header","TableHeader","TableBody","row","Fragment","key","id","TableExpandRow","cells","cell","TableCell","value","TableExpandedRow","colSpan","length","name","createdAt","updatedAt","issueCount","stars","links","RepoPage","App","Content","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c43bd09f.chunk.js","sourcesContent":["import TutorialHeader from './TutorialHeader';\nexport default TutorialHeader;\n","import React from 'react';\nimport {\n  Header,\n  HeaderContainer,\n  HeaderName,\n  HeaderNavigation,\n  HeaderMenuButton,\n  HeaderMenuItem,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n  SkipToContent,\n  SideNav,\n  SideNavItems,\n  HeaderSideNavItems,\n} from 'carbon-components-react';\nimport {\n  AppSwitcher20,\n  Notification20,\n  UserAvatar20,\n} from '@carbon/icons-react';\nimport { Link } from 'react-router-dom';\n\nconst TutorialHeader = () => (\n  <HeaderContainer\n    render={({ isSideNavExpanded, onClickSideNavExpand }) => (\n      <Header aria-label=\"Carbon Tutorial\">\n        <SkipToContent />\n        <HeaderMenuButton\n          aria-label=\"Open menu\"\n          onClick={onClickSideNavExpand}\n          isActive={isSideNavExpanded}\n        />\n        <HeaderName element={Link} to=\"/\" prefix=\"IBM\">\n          Carbon Tutorial\n        </HeaderName>\n        <HeaderNavigation aria-label=\"Carbon Tutorial\">\n          <HeaderMenuItem element={Link} to=\"/repos\">\n            Repositories\n          </HeaderMenuItem>\n        </HeaderNavigation>\n        <SideNav\n          aria-label=\"Side navigation\"\n          expanded={isSideNavExpanded}\n          isPersistent={false}>\n          <SideNavItems>\n            <HeaderSideNavItems>\n              <HeaderMenuItem element={Link} to=\"/repos\">\n                Repositories\n              </HeaderMenuItem>\n            </HeaderSideNavItems>\n          </SideNavItems>\n        </SideNav>\n        <HeaderGlobalBar>\n          <HeaderGlobalAction aria-label=\"Notifications\">\n            <Notification20 />\n          </HeaderGlobalAction>\n          <HeaderGlobalAction aria-label=\"User Avatar\">\n            <UserAvatar20 />\n          </HeaderGlobalAction>\n          <HeaderGlobalAction aria-label=\"App Switcher\">\n            <AppSwitcher20 />\n          </HeaderGlobalAction>\n        </HeaderGlobalBar>\n      </Header>\n    )}\n  />\n);\n\nexport default TutorialHeader;\n","import React from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Tabs,\n  Tab,\n} from 'carbon-components-react';\n\nconst props = {\n  tabs: {\n    selected: 0,\n    triggerHref: '#',\n    role: 'navigation',\n  },\n  tab: {\n    href: '#',\n    role: 'presentation',\n    tabIndex: 0,\n  },\n};\n\nconst LandingPage = () => {\n  return (\n    <div className=\"bx--grid bx--grid--full-width landing-page\">\n      <div className=\"bx--row landing-page__banner\">\n        <div className=\"bx--col-lg-16\">\n          <Breadcrumb noTrailingSlash aria-label=\"Page navigation\">\n            <BreadcrumbItem>\n              <a href=\"/\">Getting started</a>\n            </BreadcrumbItem>\n          </Breadcrumb>\n          <h1 className=\"landing-page__heading\">\n            Design &amp; build with Carbon\n          </h1>\n        </div>\n      </div>\n      <div className=\"bx--row landing-page__r2\">\n        <div className=\"bx--col bx--no-gutter\">\n          <Tabs {...props.tabs} aria-label=\"Tab navigation\">\n            <Tab {...props.tab} label=\"About\">\n              <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n                <div className=\"bx--row landing-page__tab-content\">\n                  <div className=\"bx--col-md-4 bx--col-lg-7\">\n                    <h2 className=\"landing-page__subheading\">\n                      What is Carbon?\n                    </h2>\n                    <p className=\"landing-page__p\">\n                      Carbon is IBMâ€™s open-source design system for digital\n                      products and experiences. With the IBM Design Language as\n                      its foundation, the system consists of working code,\n                      design tools and resources, human interface guidelines,\n                      and a vibrant community of contributors.\n                    </p>\n                    <Button>Learn more</Button>\n                  </div>\n                  <div className=\"bx--col-md-4 bx--offset-lg-1 bx--col-lg-8\">\n                    <img\n                      className=\"landing-page__illo\"\n                      src={`${process.env.PUBLIC_URL}/tab-illo.png`}\n                      alt=\"Carbon illustration\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </Tab>\n            <Tab {...props.tab} label=\"Design\">\n              <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n                <div className=\"bx--row landing-page__tab-content\">\n                  <div className=\"bx--col-lg-16\">\n                    Rapidly build beautiful and accessible experiences. The\n                    Carbon kit contains all resources you need to get started.\n                  </div>\n                </div>\n              </div>\n            </Tab>\n            <Tab {...props.tab} label=\"Develop\">\n              <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n                <div className=\"bx--row landing-page__tab-content\">\n                  <div className=\"bx--col-lg-16\">\n                    Carbon provides styles and components in Vanilla, React,\n                    Angular, and Vue for anyone building on the web.\n                  </div>\n                </div>\n              </div>\n            </Tab>\n          </Tabs>\n        </div>\n      </div>\n      <div className=\"bx--row landing-page__r3\">\n        <div className=\"bx--col-md-4 bx--col-lg-4\">\n          <h3 className=\"landing-page__label\">The Principles</h3>\n        </div>\n        <div className=\"bx--col-md-4 bx--col-lg-4\">Carbon is Open</div>\n        <div className=\"bx--col-md-4 bx--col-lg-4\">Carbon is Modular</div>\n        <div className=\"bx--col-md-4 bx--col-lg-4\">Carbon is Consistent</div>\n      </div>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import LandingPage from './LandingPage';\nexport default LandingPage;\n","import React from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableExpandHeader,\n  TableHeader,\n  TableBody,\n  TableExpandRow,\n  TableCell,\n  TableExpandedRow,\n} from 'carbon-components-react';\n\nconst RepoTable = ({ rows, headers }) => {\n  return (\n    <DataTable\n      rows={rows}\n      headers={headers}\n      render={({\n        rows,\n        headers,\n        getHeaderProps,\n        getRowProps,\n        getTableProps,\n      }) => (\n        <TableContainer\n          title=\"Carbon Repositories\"\n          description=\"A collection of public Carbon repositories.\">\n          <Table {...getTableProps()}>\n            <TableHead>\n              <TableRow>\n                <TableExpandHeader />\n                {headers.map(header => (\n                  <TableHeader {...getHeaderProps({ header })}>\n                    {header.header}\n                  </TableHeader>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(row => (\n                <React.Fragment key={row.id}>\n                  <TableExpandRow {...getRowProps({ row })}>\n                    {row.cells.map(cell => (\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\n                    ))}\n                  </TableExpandRow>\n                  <TableExpandedRow colSpan={headers.length + 1}>\n                    <p>Row description</p>\n                  </TableExpandedRow>\n                </React.Fragment>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    />\n  );\n};\n\nexport default RepoTable;\n","import React from 'react';\nimport RepoTable from './RepoTable';\n\nconst headers = [\n  {\n    key: 'name',\n    header: 'Name',\n  },\n  {\n    key: 'createdAt',\n    header: 'Created',\n  },\n  {\n    key: 'updatedAt',\n    header: 'Updated',\n  },\n  {\n    key: 'issueCount',\n    header: 'Open Issues',\n  },\n  {\n    key: 'stars',\n    header: 'Stars',\n  },\n  {\n    key: 'links',\n    header: 'Links',\n  },\n];\n\nconst rows = [\n  {\n    id: '1',\n    name: 'Repo 1',\n    createdAt: 'Date',\n    updatedAt: 'Date',\n    issueCount: '123',\n    stars: '456',\n    links: 'Links',\n  },\n  {\n    id: '2',\n    name: 'Repo 2',\n    createdAt: 'Date',\n    updatedAt: 'Date',\n    issueCount: '123',\n    stars: '456',\n    links: 'Links',\n  },\n  {\n    id: '3',\n    name: 'Repo 3',\n    createdAt: 'Date',\n    updatedAt: 'Date',\n    issueCount: '123',\n    stars: '456',\n    links: 'Links',\n  },\n];\n\nconst RepoPage = () => {\n  return (\n    <div className=\"bx--grid bx--grid--full-width bx--grid--no-gutter repo-page\">\n      <div className=\"bx--row repo-page__r1\">\n        <div className=\"bx--col-lg-16\">\n          <RepoTable headers={headers} rows={rows} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RepoPage;\n","import RepoPage from './RepoPage';\nexport default RepoPage;\n","import React, { Component } from 'react';\nimport './app.scss';\nimport { Content } from 'carbon-components-react';\nimport TutorialHeader from './components/TutorialHeader';\nimport { Route, Switch } from 'react-router-dom';\nimport LandingPage from './content/LandingPage';\nimport RepoPage from './content/RepoPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <TutorialHeader />\n        <Content>\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route path=\"/repos\" component={RepoPage} />\n          </Switch>\n        </Content>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'core-js/modules/es7.array.includes';\nimport 'core-js/modules/es6.array.fill';\nimport 'core-js/modules/es6.string.includes';\nimport 'core-js/modules/es6.string.trim';\nimport 'core-js/modules/es7.object.values';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}